spring:
  application:
    name: order-service # 설정서버에서 설정을 필터링하는 데 사용하는 애플리케이션 이름
  config:
    import: "optional:configserver:" # 가능하면 컨피그 서버에서 설정 데이터를 가져온다.
  cloud:
    config:
      uri: http://localhost:8888 # 설정 서버의 URL
  lifecycle:
    timeout-per-shutdown-phase: 15s  # 15초 간의 우아한 종료 기간을 정의
  r2dbc:
    username: user  # 해당 데이터베이스에 접근 권한이 있는 유저
    password: password # 유저의 패스워드
    url: r2dbc:postgresql://localhost:5432/polardb_order  # 연결하려는 데이터베이스에 대한 R2DBC URL
    pool:
      max-create-connection-time: 2s # 풀에서 연결 객체 하나를 얻을 때까지 기다릴 수 있는 최대한의 시간
      initial-size: 5 # 연결 풀의 초기 크기
      max-size: 10 # 풀이 최대한으로 가질 수 있는 연결의 수
  flyway:
    user: ${spring.r2dbc.username}
    password: ${spring.r2dbc.password}
    url: jdbc:postgresql://localhost:5432/polardb_order

server:
  port: 9002           # 서버가 연결을 받아들이는 포트
  shutdown: graceful   # 우아한 종료를 활성화
  netty:
    connection-timeout: 2s  # 서버와 TCP 연결을 수립하기 위해 기다리는 시간
    idle-timeout: 15s       # 데이터가 전송되지 않는 경우 TCP 연결을 닫기 전에 기다리는 시간

polar:
  catalog-service-uri: "http://localhost:9001"

